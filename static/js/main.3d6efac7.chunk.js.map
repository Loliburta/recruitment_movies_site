{"version":3,"sources":["utils/context.ts","components/MovieOverview/MovieOverview.tsx","components/Movie/Movie.tsx","utils/apiCalls.ts","components/App/App.tsx","components/Wrapper.tsx","index.tsx"],"names":["overviewContext","createContext","MovieOverview","original_title","overview","title","release_date","backdrop_path","vote_average","poster_path","useContext","setOverviewBox","closeOverview","document","getElementsByTagName","style","overflowY","className","onClick","e","stopPropagation","icon","closeIcon","src","alt","Movie","apiKey","process","base","getCall","query","setMovies","a","mostPopularMovies","fetch","res","json","moviesList","console","log","results","searchCall","search","App","useState","movies","overviewBox","debouncedSearch","useCallback","debounce","useEffect","htmlFor","searchFill","id","type","placeholder","onChange","target","value","map","movie","Wrapper","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3d6efac7.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\ntype overviewContextProps = [\n    overviewBox: any,\n    setOverviewBox?: React.Dispatch<React.SetStateAction<any>>\n  ];\nexport const overviewContext = createContext<overviewContextProps>([\"\"]);\n\n","import { Icon } from \"@iconify/react\";\nimport closeIcon from \"@iconify-icons/carbon/close\";\nimport { overviewContext } from \"../../utils/context\";\nimport { useContext } from \"react\";\ninterface Props {\n  original_title: string;\n  overview: string;\n  release_date: string;\n  title: string;\n  vote_average: number;\n  poster_path: string;\n  backdrop_path: string;\n}\nexport const MovieOverview: React.FC<Props> = ({\n  original_title,\n  overview,\n  release_date,\n  title,\n  vote_average,\n  poster_path,\n  backdrop_path,\n}) => {\n  const imgApi = \"https://image.tmdb.org/t/p/w500\";\n  const [overviewBox, setOverviewBox] = useContext(overviewContext);\n  const closeOverview = () => {\n    document.getElementsByTagName(\"body\")[0]!.style.overflowY = \"visible\";\n    setOverviewBox!(\"\");\n  };\n\n  return (\n    <div className=\"movieOverview__wrapper\" onClick={closeOverview}>\n      <div\n        className=\"movieOverview\"\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n      >\n        <div className=\"movieOverview__iconDiv\" onClick={closeOverview}>\n          <Icon className=\"movieOverview__iconDiv__icon\" icon={closeIcon} />\n        </div>\n        <img\n          className=\"movieOverview__img\"\n          src={imgApi + backdrop_path}\n          alt={title}\n        />\n        <div className=\"movieOverview__details\">\n          <div className=\"movieOverview__details__overview\">{overview}</div>\n          <div className=\"movieOverview__details__title\">{title}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect, useRef, useContext } from \"react\";\nimport { MovieOverview } from \"../MovieOverview/MovieOverview\";\nimport { overviewContext } from \"../../utils/context\";\n\ninterface Props {\n  original_title: string;\n  overview: string;\n  release_date: string;\n  title: string;\n  vote_average: number;\n  poster_path: string;\n  backdrop_path: string;\n}\nconst imgApi = \"https://image.tmdb.org/t/p/w300\";\nexport const Movie: React.FC<Props> = ({\n  original_title,\n  overview,\n  release_date,\n  title,\n  vote_average,\n  poster_path,\n  backdrop_path,\n}) => {\n  const [overviewBox, setOverviewBox] = useContext(overviewContext);\n\n  const openOverview = () => {\n    document.getElementsByTagName(\"body\")[0]!.style.overflowY = \"hidden\";\n    setOverviewBox!(\n      <MovieOverview\n        original_title={original_title}\n        overview={overview}\n        release_date={release_date}\n        title={title}\n        vote_average={vote_average}\n        poster_path={poster_path}\n        backdrop_path={backdrop_path}\n      />\n    );\n  };\n\n  return (\n    <>\n      <div className=\"movie\" onClick={openOverview}>\n        <img className=\"movie__img\" src={imgApi + poster_path} alt={title} />\n        <div className=\"movie__info\">\n          <div className=\"movie__info__title\">{title}</div>\n          <div className=\"movie__info__vote_average\">{vote_average}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n","const apiKey = process.env.REACT_APP_API_KEY;\nconst base = \"https://api.themoviedb.org/3/\";\n\nexport const getCall = async (\n  query: string,\n  setMovies: React.Dispatch<React.SetStateAction<never[]>>\n) => {\n  const mostPopularMovies = `${base}movie/${query}?api_key=${apiKey}&language=en-US&page=1`;\n  try {\n    const res = await fetch(mostPopularMovies);\n    const moviesList = await res.json();\n    console.log(moviesList.results);\n    setMovies(moviesList.results);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchCall = async (\n  search: string,\n  setMovies: React.Dispatch<React.SetStateAction<never[]>>\n) => {\n  try {\n    if (search) {\n      const res = await fetch(\n        `${base}search/movie?api_key=${apiKey}&language=en-US&query=${search}&page=1&include_adult=false`\n      );\n      const moviesList = await res.json();\n      console.log(moviesList);\n      setMovies(moviesList.results);\n    } else {\n      getCall(\"popular\", setMovies);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { useState, useEffect, useCallback, useContext } from \"react\";\nimport { Movie } from \"../Movie/Movie\";\nimport { getCall, searchCall } from \"../../utils/apiCalls\";\nimport { overviewContext } from \"../../utils/context\";\nimport { debounce } from \"lodash\";\nimport { Icon } from \"@iconify/react\";\nimport searchFill from \"@iconify-icons/eva/search-fill\";\ninterface Props {\n  id: number;\n  original_title: string;\n  overview: string;\n  release_date: string;\n  title: string;\n  vote_average: number;\n  poster_path: string;\n  backdrop_path: string;\n}\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n  const [overviewBox, setOverviewBox] = useContext(overviewContext);\n  const debouncedSearch = useCallback(\n    debounce((search, setMovies) => searchCall(search, setMovies), 700),\n    []\n  );\n  const handleChange = (e: React.ChangeEvent<any>) => {\n    debouncedSearch(e.target.value, setMovies);\n  };\n\n  useEffect(() => {\n    getCall(\"popular\", setMovies);\n    console.log(movies);\n  }, []);\n\n  return (\n    <>\n      {overviewBox ? overviewBox : \"\"}\n      <div className=\"navbar\">\n        <div\n          className=\"navbar__popular\"\n          onClick={() => getCall(\"popular\", setMovies)}\n        >\n          Popular\n        </div>\n        <div\n          className=\"navbar__popular\"\n          onClick={() => getCall(\"top_rated\", setMovies)}\n        >\n          Top Rated\n        </div>\n        <div\n          className=\"navbar__popular\"\n          onClick={() => getCall(\"upcoming\", setMovies)}\n        >\n          Upcoming\n        </div>\n        <div className=\"navbar__search\">\n          <label htmlFor=\"input\">\n            <Icon className=\"navbar__icon\" icon={searchFill} />\n          </label>\n          <input\n            id=\"input\"\n            className=\"navbar__input\"\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={handleChange}\n          />\n        </div>\n      </div>\n      <div className={overviewBox ? \"movies--open\" : \"movies\"}>\n        {movies &&\n          movies.map((movie: Props) => {\n            if (!movie.backdrop_path || !movie.poster_path) {\n              return;\n            }\n            return (\n              <Movie\n                key={movie.id}\n                original_title={movie.original_title}\n                overview={movie.overview}\n                release_date={movie.release_date}\n                title={movie.title}\n                vote_average={movie.vote_average}\n                poster_path={movie.poster_path}\n                backdrop_path={movie.backdrop_path}\n              />\n            );\n          })}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { App } from \"./App/App\";\nimport { overviewContext } from \"../utils/context\";\n\nexport const Wrapper = () => {\n  const [overviewBox, setOverviewBox] = useState(\"\");\n\n  return (\n    <overviewContext.Provider value={[overviewBox, setOverviewBox]}>\n      <App />\n    </overviewContext.Provider>\n  );\n};\n\nexport default Wrapper;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Wrapper from \"./components/Wrapper\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Wrapper />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}