{"version":3,"sources":["utils/context.ts","components/MovieOverview/MovieOverview.tsx","components/Movie/Movie.tsx","utils/apiCall.ts","components/App/App.tsx","components/Wrapper.tsx","index.tsx"],"names":["overviewContext","createContext","MovieOverview","original_title","overview","title","release_date","backdrop_path","vote_average","poster_path","useContext","setOverviewBox","closeOverview","document","getElementsByTagName","style","overflowY","className","onClick","e","stopPropagation","icon","closeIcon","src","alt","Movie","apiCall","setMovies","a","mostPopularMovies","process","fetch","res","json","moviesList","console","log","results","App","useState","movies","overviewBox","search","setSearch","searchCall","useEffect","debouncedSearch","useCallback","debounce","htmlFor","searchFill","id","type","placeholder","onChange","target","value","length","map","movie","Wrapper","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf3d8e72.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\ntype overviewContextProps = [\n    overviewBox: any,\n    setOverviewBox?: React.Dispatch<React.SetStateAction<any>>\n  ];\nexport const overviewContext = createContext<overviewContextProps>([\"\"]);\n\n","import { Icon } from \"@iconify/react\";\nimport closeIcon from \"@iconify-icons/carbon/close\";\nimport { overviewContext } from \"../../utils/context\";\nimport { useContext } from \"react\";\ninterface Props {\n  original_title: string;\n  overview: string;\n  release_date: string;\n  title: string;\n  vote_average: number;\n  poster_path: string;\n  backdrop_path: string;\n}\nexport const MovieOverview: React.FC<Props> = ({\n  original_title,\n  overview,\n  release_date,\n  title,\n  vote_average,\n  poster_path,\n  backdrop_path,\n}) => {\n  const [overviewBox, setOverviewBox] = useContext(overviewContext);\n  const closeOverview = () => {\n    document.getElementsByTagName(\"body\")[0]!.style.overflowY = \"visible\";\n\n    setOverviewBox!(\"\");\n  };\n\n  const imgApi = \"https://image.tmdb.org/t/p/w1280\";\n  return (\n    <div className=\"movieOverview__wrapper\" onClick={closeOverview}>\n      <div\n        className=\"movieOverview\"\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n      >\n        <div className=\"movieOverview__iconDiv\" onClick={closeOverview}>\n          <Icon className=\"movieOverview__iconDiv__icon\" icon={closeIcon} />\n        </div>\n        <img\n          className=\"movieOverview__img\"\n          src={imgApi + backdrop_path}\n          alt={title}\n        />\n        <div className=\"movieOverview__details\">\n          <div className=\"movieOverview__details__overview\">{overview}</div>\n          <div className=\"movieOverview__details__title\">{title}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect, useRef, useContext } from \"react\";\nimport { MovieOverview } from \"../MovieOverview/MovieOverview\";\nimport { overviewContext } from \"../../utils/context\";\n\ninterface Props {\n  original_title: string;\n  overview: string;\n  release_date: string;\n  title: string;\n  vote_average: number;\n  poster_path: string;\n  backdrop_path: string;\n}\nconst imgApi = \"https://image.tmdb.org/t/p/w1280\";\nexport const Movie: React.FC<Props> = ({\n  original_title,\n  overview,\n  release_date,\n  title,\n  vote_average,\n  poster_path,\n  backdrop_path,\n}) => {\n  const [overviewBox, setOverviewBox] = useContext(overviewContext);\n\n  const openOverview = () => {\n    document.getElementsByTagName(\"body\")[0]!.style.overflowY = \"hidden\";\n    setOverviewBox!(\n      <MovieOverview\n        original_title={original_title}\n        overview={overview}\n        release_date={release_date}\n        title={title}\n        vote_average={vote_average}\n        poster_path={poster_path}\n        backdrop_path={backdrop_path}\n      />\n    );\n  };\n\n  return (\n    <>\n      <div className=\"movie\" onClick={openOverview}>\n        <img className=\"movie__img\" src={imgApi + poster_path} alt={title} />\n        <div className=\"movie__info\">\n          <div className=\"movie__info__title\">{title}</div>\n          <div className=\"movie__info__vote_average\">{vote_average}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n","const apiKey = process.env.REACT_APP_API_KEY;\n\nexport const apiCall = async (\n  setMovies: React.Dispatch<React.SetStateAction<never[]>>\n) => {\n  const base = \"https://api.themoviedb.org/3/\";\n  const mostPopularMovies = `${base}movie/popular?api_key=${apiKey}&language=en-US&page=1`;\n  const res = await fetch(mostPopularMovies);\n  const moviesList = await res.json();\n  console.log(moviesList.results)\n  setMovies(moviesList.results);\n};\n","import { useState, useEffect, useCallback, useContext } from \"react\";\nimport { Movie } from \"../Movie/Movie\";\nimport { apiCall } from \"../../utils/apiCall\";\nimport { overviewContext } from \"../../utils/context\";\nimport { debounce } from \"lodash\";\nimport { Icon } from \"@iconify/react\";\nimport searchFill from \"@iconify-icons/eva/search-fill\";\nconst apiKey = process.env.REACT_APP_API_KEY;\ninterface Props {\n  id: number;\n  original_title: string;\n  overview: string;\n  release_date: string;\n  title: string;\n  vote_average: number;\n  poster_path: string;\n  backdrop_path: string;\n}\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n  const [overviewBox, setOverviewBox] = useContext(overviewContext);\n  const [search, setSearch] = useState(\"\");\n  const handleChange = (e: React.ChangeEvent<any>) => {\n    setSearch(e.target.value);\n    console.log(search);\n    debouncedSearch(search, setMovies);\n  };\n  const base = \"https://api.themoviedb.org/3/\";\n  const searchCall = async (\n    search: string,\n    setMovies: React.Dispatch<React.SetStateAction<never[]>>\n  ) => {\n    const res = await fetch(\n      `${base}search/movie?api_key=${apiKey}&language=en-US&query=${search}&page=1&include_adult=false`\n    );\n    const moviesList = await res.json();\n    console.log(moviesList);\n    setMovies(moviesList.results);\n  };\n  useEffect(() => {\n    apiCall(setMovies);\n    console.log(movies);\n  }, []);\n  const debouncedSearch = useCallback(\n    debounce((search, setMovies) => searchCall(search, setMovies), 1000),\n    []\n  );\n\n  return (\n    <>\n      {overviewBox ? overviewBox : \"\"}\n      <div className=\"navbar\">\n        <label htmlFor=\"input\">\n          <Icon className=\"navbar__icon\" icon={searchFill} />\n        </label>\n        <input\n          id=\"input\"\n          className=\"navbar__search\"\n          type=\"text\"\n          placeholder=\"Search\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className={overviewBox ? \"movies--open\" : \"movies\"}>\n        {movies.length > 0 &&\n          movies.map((movie: Props) => {\n            if (!movie.backdrop_path || !movie.poster_path) {\n              return;\n            }\n            return (\n              <Movie\n                key={movie.id}\n                original_title={movie.original_title}\n                overview={movie.overview}\n                release_date={movie.release_date}\n                title={movie.title}\n                vote_average={movie.vote_average}\n                poster_path={movie.poster_path}\n                backdrop_path={movie.backdrop_path}\n              />\n            );\n          })}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { App } from \"./App/App\";\nimport { overviewContext } from \"../utils/context\";\n\nexport const Wrapper = () => {\n  let [overviewBox, setOverviewBox] = useState(\"\");\n\n  return (\n    <overviewContext.Provider value={[overviewBox, setOverviewBox]}>\n      <App />\n    </overviewContext.Provider>\n  );\n};\n\nexport default Wrapper;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Wrapper from \"./components/Wrapper\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Wrapper />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}