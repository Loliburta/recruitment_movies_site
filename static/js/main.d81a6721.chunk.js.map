{"version":3,"sources":["utils/context.ts","components/MovieOverview/MovieOverview.tsx","components/Movie/Movie.tsx","utils/apiCall.ts","components/App/App.tsx","components/Wrapper.tsx","index.tsx"],"names":["overviewContext","createContext","MovieOverview","original_title","overview","title","release_date","poster_path","vote_average","useContext","setOverviewBox","className","onClick","icon","closeIcon","src","alt","Movie","apiCall","setMovies","a","mostPopularMovies","process","fetch","res","json","moviesList","console","log","results","App","useState","movies","overviewBox","useEffect","length","map","movie","id","Wrapper","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAMaA,EAAkBC,wBAAoC,CAAC,K,OCMvDC,EAAiC,SAAC,GAOzC,EANJC,eAMK,IALLC,EAKI,EALJA,SAEAC,GAGI,EAJJC,aAII,EAHJD,OAEAE,GACI,EAFJC,aAEI,EADJD,aACI,EACgCE,qBAAWT,GAD3C,mBACcU,GADd,WAOJ,OACE,qBAAKC,UAAU,yBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,yBAAyBC,QAPxB,WACpBF,EAAgB,KAMZ,SACE,cAAC,OAAD,CAAMC,UAAU,+BAA+BE,KAAMC,QAEvD,qBACEH,UAAU,qBACVI,IATO,mCASOR,EACdS,IAAKX,IAGP,qBAAKM,UAAU,0BAAf,SAA0CP,IAC1C,qBAAKO,UAAU,uBAAf,SAAuCN,UC1BlCY,EAAyB,SAAC,GAOhC,IANLd,EAMI,EANJA,eACAC,EAKI,EALJA,SACAE,EAII,EAJJA,aACAD,EAGI,EAHJA,MACAG,EAEI,EAFJA,aACAD,EACI,EADJA,YACI,EACkCE,qBAAWT,GAD7C,mBACgBU,GADhB,WAgBJ,OACE,mCACE,sBAAKC,UAAU,QAAQC,QAfN,WACnBF,EACE,cAAC,EAAD,CACEP,eAAgBA,EAChBC,SAAUA,EACVE,aAAcA,EACdD,MAAOA,EACPG,aAAcA,EACdD,YAAaA,MAOf,UACE,qBAAKI,UAAU,aAAaI,IA3BrB,mCA2BmCR,EAAaS,IAAKX,IAC5D,sBAAKM,UAAU,cAAf,UACE,qBAAKA,UAAU,qBAAf,SAAqCN,IACrC,qBAAKM,UAAU,4BAAf,SAA4CH,a,uBCxCzCU,EAAO,uCAAG,WACrBC,GADqB,mBAAAC,EAAA,4DAGR,gCACPC,EAJe,UAGR,gCAHQ,iCAFRC,mCAEQ,mCAKHC,MAAMF,GALH,cAKfG,EALe,gBAMIA,EAAIC,OANR,OAMfC,EANe,OAOrBC,QAAQC,IAAIF,EAAWG,SACvBV,EAAUO,EAAWG,SARA,4CAAH,sDCYPC,EAAM,WAAO,IAAD,EACKC,mBAAS,IADd,mBAChBC,EADgB,KACRb,EADQ,OAEeV,qBAAWT,GAF1B,mBAEhBiC,EAFgB,UAKX,UADC,gCACD,gCAfCX,mCAeD,iCAFA,GAEA,+BAOZ,OALAY,qBAAU,WACRhB,EAAQC,GACRQ,QAAQC,IAAII,KACX,IAGD,qCACGC,GAA4B,GAC7B,qBAAKtB,UAAU,SAAf,SACGqB,EAAOG,OAAS,GACfH,EAAOI,KAAI,SAACC,GACV,OACE,cAAC,EAAD,CAEElC,eAAgBkC,EAAMlC,eACtBC,SAAUiC,EAAMjC,SAChBE,aAAc+B,EAAM/B,aACpBD,MAAOgC,EAAMhC,MACbG,aAAc6B,EAAM7B,aACpBD,YAAa8B,EAAM9B,aANd8B,EAAMC,aCpBZC,EAVQ,WAAO,IAAD,EACSR,mBAAS,IADlB,mBACtBE,EADsB,KACTvB,EADS,KAG3B,OACE,cAACV,EAAgBwC,SAAjB,CAA0BC,MAAO,CAACR,EAAavB,GAA/C,SACE,cAAC,EAAD,O,MCJNgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d81a6721.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\ntype overviewContextProps = [\n    overviewBox: any,\n    setOverviewBox?: React.Dispatch<React.SetStateAction<any>>\n  ];\nexport const overviewContext = createContext<overviewContextProps>([\"\"]);\n\n","import { Icon } from \"@iconify/react\";\nimport closeIcon from \"@iconify-icons/carbon/close\";\nimport { overviewContext } from \"../../utils/context\";\nimport { useContext } from \"react\";\ninterface Props {\n  original_title: string;\n  overview: string;\n  release_date: string;\n  title: string;\n  vote_average: number;\n  poster_path: string;\n}\nexport const MovieOverview: React.FC<Props> = ({\n  original_title,\n  overview,\n  release_date,\n  title,\n  vote_average,\n  poster_path,\n}) => {\n  let [overviewBox, setOverviewBox] = useContext(overviewContext);\n\n  const closeOverview = () => {\n    setOverviewBox!(\"\");\n  };\n  const imgApi = \"https://image.tmdb.org/t/p/w1280\";\n  return (\n    <div className=\"movieOverview__wrapper\">\n      <div className=\"movieOverview\">\n        <div className=\"movieOverview__iconDiv\" onClick={closeOverview}>\n          <Icon className=\"movieOverview__iconDiv__icon\" icon={closeIcon} />\n        </div>\n        <img\n          className=\"movieOverview__img\"\n          src={imgApi + poster_path}\n          alt={title}\n        />\n\n        <div className=\"movieOverview__overview\">{overview}</div>\n        <div className=\"movieOverview__title\">{title}</div>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect, useRef, useContext } from \"react\";\nimport { MovieOverview } from \"../MovieOverview/MovieOverview\";\nimport { overviewContext } from \"../../utils/context\";\n\ninterface Props {\n  original_title: string;\n  overview: string;\n  release_date: string;\n  title: string;\n  vote_average: number;\n  poster_path: string;\n}\nconst imgApi = \"https://image.tmdb.org/t/p/w1280\";\nexport const Movie: React.FC<Props> = ({\n  original_title,\n  overview,\n  release_date,\n  title,\n  vote_average,\n  poster_path,\n}) => {\n  const [overviewBox, setOverviewBox] = useContext(overviewContext);\n\n  const openOverview = () => {\n    setOverviewBox!(\n      <MovieOverview\n        original_title={original_title}\n        overview={overview}\n        release_date={release_date}\n        title={title}\n        vote_average={vote_average}\n        poster_path={poster_path}\n      />\n    );\n  };\n\n  return (\n    <>\n      <div className=\"movie\" onClick={openOverview}>\n        <img className=\"movie__img\" src={imgApi + poster_path} alt={title} />\n        <div className=\"movie__info\">\n          <div className=\"movie__info__title\">{title}</div>\n          <div className=\"movie__info__vote_average\">{vote_average}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n","const apiKey = process.env.REACT_APP_API_KEY;\n\nexport const apiCall = async (\n  setMovies: React.Dispatch<React.SetStateAction<never[]>>\n) => {\n  const base = \"https://api.themoviedb.org/3/\";\n  const mostPopularMovies = `${base}movie/popular?api_key=${apiKey}&language=en-US&page=1`;\n  const res = await fetch(mostPopularMovies);\n  const moviesList = await res.json();\n  console.log(moviesList.results)\n  setMovies(moviesList.results);\n};\n","import { useState, useEffect, useContext } from \"react\";\nimport { Movie } from \"../Movie/Movie\";\nimport { apiCall } from \"../../utils/apiCall\";\nimport { overviewContext } from \"../../utils/context\";\nconst apiKey = process.env.REACT_APP_API_KEY;\ninterface Props {\n  id: number;\n  original_title: string;\n  overview: string;\n  release_date: string;\n  title: string;\n  vote_average: number;\n  poster_path: string;\n}\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n  const [overviewBox, setOverviewBox] = useContext(overviewContext);\n  let query = \"\";\n  const base = \"https://api.themoviedb.org/3/\";\n  const search = `${base}search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`;\n\n  useEffect(() => {\n    apiCall(setMovies);\n    console.log(movies);\n  }, []);\n\n  return (\n    <>\n      {overviewBox ? overviewBox : \"\"}\n      <div className=\"movies\">\n        {movies.length > 0 &&\n          movies.map((movie: Props) => {\n            return (\n              <Movie\n                key={movie.id}\n                original_title={movie.original_title}\n                overview={movie.overview}\n                release_date={movie.release_date}\n                title={movie.title}\n                vote_average={movie.vote_average}\n                poster_path={movie.poster_path}\n              />\n            );\n          })}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { App } from \"./App/App\";\nimport { overviewContext } from \"../utils/context\";\n\nexport const Wrapper = () => {\n  let [overviewBox, setOverviewBox] = useState(\"\");\n\n  return (\n    <overviewContext.Provider value={[overviewBox, setOverviewBox]}>\n      <App />\n    </overviewContext.Provider>\n  );\n};\n\nexport default Wrapper;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Wrapper from \"./components/Wrapper\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Wrapper />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}