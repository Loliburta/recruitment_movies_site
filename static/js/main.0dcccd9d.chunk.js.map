{"version":3,"sources":["components/MovieOverview/MovieOverview.tsx","utils/context.ts","components/Movie/Movie.tsx","utils/apiCall.ts","components/App/App.tsx","components/Wrapper.tsx","index.tsx"],"names":["MovieOverview","original_title","overview","title","release_date","poster_path","vote_average","className","icon","closeIcon","src","alt","OverviewContext","createContext","Movie","useState","overviewBox","setOverviewBox","useContext","isOpen","setIsOpen","console","log","onClick","apiCall","setMovies","a","mostPopularMovies","process","fetch","res","json","moviesList","results","App","movies","useEffect","length","map","movie","id","Wrapper","open","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAUaA,EAAiC,SAAC,GAOzC,EANJC,eAMK,IALLC,EAKI,EALJA,SAEAC,GAGI,EAJJC,aAII,EAHJD,OAEAE,GACI,EAFJC,aAEI,EADJD,aAGA,OACE,qBAAKE,UAAU,yBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,cAAC,OAAD,CAAMA,UAAU,+BAA+BC,KAAMC,QAEvD,qBACEF,UAAU,qBACVG,IATO,mCASOL,EACdM,IAAKR,IAGP,qBAAKI,UAAU,0BAAf,SAA0CL,IAC1C,qBAAKK,UAAU,uBAAf,SAAuCJ,UC7BlCS,EAAkBC,wBAA4B,ICU9CC,EAAyB,SAAC,GAOhC,IANLb,EAMI,EANJA,eACAC,EAKI,EALJA,SACAE,EAII,EAJJA,aACAD,EAGI,EAHJA,MACAG,EAEI,EAFJA,aACAD,EACI,EADJA,YACI,EACgCU,qBADhC,mBACCC,EADD,KACcC,EADd,OAEwBC,qBAAWN,GAFnC,mBAEGO,EAFH,MAGJC,EAHI,OAGO,GACXC,QAAQC,IAAIH,GAaZ,OACE,qCACGH,GAA4B,GAC7B,sBAAKT,UAAU,QAAQgB,QAfP,WAClBN,EACE,cAAC,EAAD,CACEhB,eAAgBA,EAChBC,SAAUA,EACVE,aAAcA,EACdD,MAAOA,EACPG,aAAcA,EACdD,YAAaA,MAOf,UACE,qBAAKE,UAAU,aAAaG,IA7BrB,mCA6BmCL,EAAaM,IAAKR,IAC5D,sBAAKI,UAAU,cAAf,UACE,qBAAKA,UAAU,qBAAf,SAAqCJ,IACrC,qBAAKI,UAAU,4BAAf,SAA4CD,c,uBC1CzCkB,EAAO,uCAAG,WACrBC,GADqB,mBAAAC,EAAA,4DAGR,gCACPC,EAJe,UAGR,gCAHQ,iCAFRC,mCAEQ,mCAKHC,MAAMF,GALH,cAKfG,EALe,gBAMIA,EAAIC,OANR,OAMfC,EANe,OAOrBX,QAAQC,IAAIU,EAAWC,SACvBR,EAAUO,EAAWC,SARA,4CAAH,sDCWPC,EAAM,WAAO,IAAD,EACGnB,mBAAS,IADZ,mBAClBoB,EADkB,KACVV,EADU,KAIX,UADC,gCACD,gCAdCG,mCAcD,iCAFA,GAEA,+BAOZ,OALAQ,qBAAU,WACRZ,EAAQC,GACRJ,QAAQC,IAAIa,KACX,IAGD,qBAAK5B,UAAU,SAAf,SACG4B,EAAOE,OAAS,GACfF,EAAOG,KAAI,SAACC,GACV,OACE,cAAC,EAAD,CAEEtC,eAAgBsC,EAAMtC,eACtBC,SAAUqC,EAAMrC,SAChBE,aAAcmC,EAAMnC,aACpBD,MAAOoC,EAAMpC,MACbG,aAAciC,EAAMjC,aACpBD,YAAakC,EAAMlC,aANdkC,EAAMC,UChBVC,EAVQ,WAAO,IAAD,EACN1B,oBAAS,GADH,mBACtB2B,EADsB,KAChBvB,EADgB,KAG3B,OACE,cAACP,EAAgB+B,SAAjB,CAA0BC,MAAO,CAACF,EAAMvB,GAAxC,SACE,cAAC,EAAD,O,MCJN0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0dcccd9d.chunk.js","sourcesContent":["import { Icon } from \"@iconify/react\";\nimport closeIcon from \"@iconify-icons/carbon/close\";\ninterface Props {\n  original_title: string;\n  overview: string;\n  release_date: string;\n  title: string;\n  vote_average: number;\n  poster_path: string;\n}\nexport const MovieOverview: React.FC<Props> = ({\n  original_title,\n  overview,\n  release_date,\n  title,\n  vote_average,\n  poster_path,\n}) => {\n  const imgApi = \"https://image.tmdb.org/t/p/w1280\";\n  return (\n    <div className=\"movieOverview__wrapper\">\n      <div className=\"movieOverview\">\n        <div className=\"movieOverview__iconDiv\">\n          <Icon className=\"movieOverview__iconDiv__icon\" icon={closeIcon} />\n        </div>\n        <img\n          className=\"movieOverview__img\"\n          src={imgApi + poster_path}\n          alt={title}\n        />\n\n        <div className=\"movieOverview__overview\">{overview}</div>\n        <div className=\"movieOverview__title\">{title}</div>\n      </div>\n    </div>\n  );\n};\n","import { createContext } from \"react\";\ntype ContextProps = [isOpen?: boolean, setIsOpen?: (open: boolean) => void];\n\nexport const OverviewContext = createContext<ContextProps>([]);\n","import { useState, useContext } from \"react\";\nimport { MovieOverview } from \"../MovieOverview/MovieOverview\";\nimport { OverviewContext } from \"../../utils/context\";\n\ninterface Props {\n  original_title: string;\n  overview: string;\n  release_date: string;\n  title: string;\n  vote_average: number;\n  poster_path: string;\n}\nconst imgApi = \"https://image.tmdb.org/t/p/w1280\";\nexport const Movie: React.FC<Props> = ({\n  original_title,\n  overview,\n  release_date,\n  title,\n  vote_average,\n  poster_path,\n}) => {\n  let [overviewBox, setOverviewBox] = useState<any>();\n  const [isOpen, setIsOpen] = useContext(OverviewContext);\n  setIsOpen!(true);\n  console.log(isOpen);\n  const setOverview = () => {\n    setOverviewBox(\n      <MovieOverview\n        original_title={original_title}\n        overview={overview}\n        release_date={release_date}\n        title={title}\n        vote_average={vote_average}\n        poster_path={poster_path}\n      />\n    );\n  };\n  return (\n    <>\n      {overviewBox ? overviewBox : \"\"}\n      <div className=\"movie\" onClick={setOverview}>\n        <img className=\"movie__img\" src={imgApi + poster_path} alt={title} />\n        <div className=\"movie__info\">\n          <div className=\"movie__info__title\">{title}</div>\n          <div className=\"movie__info__vote_average\">{vote_average}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n","const apiKey = process.env.REACT_APP_API_KEY;\n\nexport const apiCall = async (\n  setMovies: React.Dispatch<React.SetStateAction<never[]>>\n) => {\n  const base = \"https://api.themoviedb.org/3/\";\n  const mostPopularMovies = `${base}movie/popular?api_key=${apiKey}&language=en-US&page=1`;\n  const res = await fetch(mostPopularMovies);\n  const moviesList = await res.json();\n  console.log(moviesList.results)\n  setMovies(moviesList.results);\n};\n","import { useState, useEffect } from \"react\";\nimport { Movie } from \"../Movie/Movie\";\nimport { apiCall } from \"../../utils/apiCall\";\nconst apiKey = process.env.REACT_APP_API_KEY;\ninterface Props {\n  id: number;\n  original_title: string;\n  overview: string;\n  release_date: string;\n  title: string;\n  vote_average: number;\n  poster_path: string;\n}\nexport const App = () => {\n  let [movies, setMovies] = useState([]);\n  let query = \"\";\n  const base = \"https://api.themoviedb.org/3/\";\n  const search = `${base}search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`;\n\n  useEffect(() => {\n    apiCall(setMovies);\n    console.log(movies);\n  }, []);\n\n  return (\n    <div className=\"movies\">\n      {movies.length > 0 &&\n        movies.map((movie: Props) => {\n          return (\n            <Movie\n              key={movie.id}\n              original_title={movie.original_title}\n              overview={movie.overview}\n              release_date={movie.release_date}\n              title={movie.title}\n              vote_average={movie.vote_average}\n              poster_path={movie.poster_path}\n            />\n          );\n        })}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { App } from \"./App/App\";\nimport { OverviewContext } from \"../utils/context\";\n\nexport const Wrapper = () => {\n  let [open, isOpen] = useState(false);\n\n  return (\n    <OverviewContext.Provider value={[open, isOpen]}>\n      <App />\n    </OverviewContext.Provider>\n  );\n};\n\nexport default Wrapper;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Wrapper from \"./components/Wrapper\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Wrapper />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}